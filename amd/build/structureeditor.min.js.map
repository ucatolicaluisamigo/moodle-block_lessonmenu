{"version":3,"file":"structureeditor.min.js","sources":["../src/structureeditor.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module structureeditor\n *\n * @module     block_lessonmenu/structureeditor\n * @copyright  2025 David Herney @ BambuCo\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport $ from 'jquery';\nimport SortableList from 'core/sortable_list';\nimport Log from 'core/log';\nimport ModalFactory from 'core/modal_factory';\nimport {get_strings as getStrings} from 'core/str';\nimport Notification from 'core/notification';\n\n// Load strings.\nvar strings = [\n    {key: 'changecontenttype', component: 'block_lessonmenu'},\n    {key: 'invalidindentation', component: 'block_lessonmenu'},\n    {key: 'invalidindentationtitle', component: 'block_lessonmenu'}\n];\n\n// Store loaded strings.\nvar s = [];\n\n/**\n * Load strings from server.\n *\n * @return {Promise} Promise that is resolved when the strings are loaded.\n */\nfunction loadStrings() {\n\n    strings.forEach(one => {\n        s[one.key] = one.key;\n    });\n\n    return new Promise((resolve) => {\n        getStrings(strings).then(function(results) {\n            var pos = 0;\n            strings.forEach(one => {\n                s[one.key] = results[pos];\n                pos++;\n            });\n\n            resolve(true);\n            return true;\n        }).fail(function(e) {\n            Log.debug('Error loading strings');\n            Log.debug(e);\n            return false;\n        });\n    });\n}\n// End of Load strings.\n\n/**\n * Initialize the structure editor.\n */\nexport const init = async() => {\n    const editorSelector = '#lessonmenu-editor';\n    const $editorContainer = $(editorSelector);\n    if ($editorContainer.length === 0) {\n        return;\n    }\n\n    await loadStrings().catch(() => null);\n\n    var changeTypeModal;\n    var $currentItem = null;\n\n    var config = {\n        targetListSelector: null,\n        moveHandlerSelector: '[data-drag-type=move]',\n        isHorizontal: false,\n        autoScroll: true\n    };\n    const list = new SortableList(editorSelector, config);\n\n    list.getElementType = element => {\n        return $.Deferred().resolve(element.attr('data-type'));\n    };\n\n    $('#lessonmenu-edit-structure-actions [data-action=\"adddefaultsections\"]').on('click', event => {\n        event.preventDefault();\n        const selectedvalue = $('#lessonmenu-add-defaultsections select').val();\n        const values = JSON.parse(selectedvalue);\n        if (values && values.length > 0) {\n            values.forEach(title => {\n                const $newitem = newSection(title);\n                if ($newitem === null) {\n                    return;\n                }\n                $editorContainer.append($newitem);\n            });\n            const $inputs = $editorContainer.find('input[type=\"text\"]');\n            if ($inputs.length) {\n                $inputs.last()[0].focus();\n            }\n\n        } else {\n            Log.debug('No sections selected to add.');\n        }\n    });\n\n    $('#lessonmenu-edit-structure-actions [data-action=\"addsection\"]').on('click', event => {\n        event.preventDefault();\n\n        const $newitem = newSection('');\n        if ($newitem === null) {\n            return;\n        }\n        $editorContainer.append($newitem);\n        $newitem.find('input[type=\"text\"]')[0].focus();\n    });\n\n    $('#lessonmenu-edit-structure-actions [data-action=\"deletesection\"]').on('click', event => {\n        event.preventDefault();\n        deletesection(event);\n    });\n\n    // Change the content type.\n    $editorContainer.find('.item-icon').on('click', event => {\n        event.preventDefault();\n        const $iconspan = $(event.currentTarget);\n        const $item = $iconspan.closest('[data-type=\"page\"]');\n        if ($item.length) {\n            changeTypeModal.show();\n            $currentItem = $item;\n        }\n    });\n\n    // Move item to right.\n    $editorContainer.find('[data-action=\"moveright\"]').on('click', event => {\n        event.preventDefault();\n        const $item = $(event.currentTarget).closest('[data-type=\"page\"]');\n        if (!$item.length) {\n            return;\n        }\n        const $prevItem = $item.prev('[data-type=\"page\"]');\n        let indentation = $item.data('indentation') || 0;\n        // First item cannot be moved right.\n        if ($prevItem.length === 0 || (($prevItem.data('indentation') - indentation) < 0)) {\n            return;\n        }\n        indentation += 1;\n        setIdentation($item, indentation);\n\n        // Move to the right of the next item with less indentation.\n        let $nextItem = $item.next('[data-type=\"page\"]');\n        while ($nextItem && $nextItem.length) {\n            const nextIndentation = $nextItem.data('indentation') || 0;\n            if (nextIndentation <= (indentation - 1)) {\n                break;\n            } else {\n                setIdentation($nextItem, nextIndentation + 1);\n                $nextItem = $nextItem.next('[data-type=\"page\"]');\n            }\n        }\n\n    });\n\n    // Move item to left.\n    $editorContainer.find('[data-action=\"moveleft\"]').on('click', event => {\n        event.preventDefault();\n        const $item = $(event.currentTarget).closest('[data-type=\"page\"]');\n        if (!$item.length) {\n            return;\n        }\n        let indentation = $item.data('indentation') || 0;\n\n        // First item cannot be moved right.\n        if (indentation == 0) {\n            return;\n        }\n\n        indentation -= 1;\n        setIdentation($item, indentation);\n\n        // Move to the left of the next item with less indentation.\n        let $nextItem = $item.next('[data-type=\"page\"]');\n        while ($nextItem && $nextItem.length) {\n            const nextIndentation = $nextItem.data('indentation') || 0;\n            if (nextIndentation <= (indentation + 1)) {\n                break;\n            } else {\n                setIdentation($nextItem, nextIndentation - 1);\n                $nextItem = $nextItem.next('[data-type=\"page\"]');\n            }\n        }\n    });\n\n    // Save the structure.\n    $('#lessonmenu-edit-structure-actions [data-action=\"save\"]').on('click', event => {\n        event.preventDefault();\n\n        let menuitems = [];\n        let section = {\n            title: null,\n            items: []\n        };\n        menuitems.push(section);\n\n        let indentation = -1;\n        $editorContainer.find('[data-type=\"section\"], [data-type=\"page\"]').each((index, element) => {\n            const $element = $(element);\n\n            if ($element.data('type') === 'section') {\n                const sectiontitle = $element.find('input[type=\"text\"]').val();\n                if (!sectiontitle || sectiontitle.trim() === '') {\n                    return; // Skip sections without title.\n                }\n\n                // Start a new section.\n                section = {\n                    title: sectiontitle,\n                    items: []\n                };\n                menuitems.push(section);\n                indentation = -1;\n                return;\n            } else if ($element.data('type') === 'page') {\n                let item = {\n                    \"pageid\": $element.data('pageid'),\n                    \"contenttype\": $element.data('contenttype'),\n                    \"duration\": $element.find('[data-action=\"duration\"] input').val(),\n                    \"indentation\": $element.data('indentation')\n                };\n\n                if ((item.indentation - indentation) > 1) {\n                    // Invalid indentation, notify and stop.\n                    Notification.alert(\n                        s.invalidindentationtitle,\n                        s.invalidindentation + ' (' + $element.find('.item-title').text() + ')'\n                    );\n                    throw new Error('Invalid indentation for item: ' + $element.find('.item-title').text());\n                }\n                indentation = item.indentation;\n\n                section.items.push(item);\n                return;\n            }\n        });\n\n        const $structureTextarea = $('textarea[name=\"structure\"]');\n        $structureTextarea.val(JSON.stringify(menuitems));\n\n        // Send the form.\n        const $form = $('#lessonmenu-edit-structure-form');\n        $form.trigger('submit');\n\n    });\n\n    // Apply the initial indentation.\n    $editorContainer.find('[data-type=\"page\"]').each((index, element) => {\n        const $element = $(element);\n        const indentation = $element.data('indentation') || 0;\n        setIdentation($element, indentation);\n    });\n\n    // Create the change content type modal.\n    const $iconModal = $('#lessonmenu-change-icon-modal');\n    ModalFactory.create({\n        type: ModalFactory.types.CANCEL,\n        body: $iconModal.html(),\n        title: s.changecontenttype,\n    })\n    .then(function(modal) {\n        changeTypeModal = modal;\n\n        modal.getRoot().find('#lessonmenu-change-icon-select > li').on('click', event => {\n            event.preventDefault();\n            const $selected = $(event.currentTarget);\n            const code = $selected.data('value');\n\n            if ($currentItem && code) {\n                // Update the item icon.\n                const $iconspan = $currentItem.find('.item-icon');\n                if ($iconspan.length) {\n                    $iconspan.html($selected.find('> span').html());\n                    $iconspan.attr('title', $selected.find('> span').attr('title') || '');\n                }\n                // Update the data attribute.\n                $currentItem.attr('data-contenttype', code);\n                $currentItem.data('contenttype', code);\n            }\n\n            $currentItem = null;\n            modal.hide();\n        });\n\n        return modal;\n    })\n    .fail(function() {\n        Log.error('Error creating change content type modal');\n    });\n};\n\n/**\n * Delete a section.\n *\n * @param {object} event\n */\nconst deletesection = (event) => {\n    event.preventDefault();\n    const $section = $(event.currentTarget).closest('[data-type=\"section\"]');\n    if ($section.length) {\n        $section.remove();\n    }\n};\n\n/**\n * Create a new section.\n *\n * @param {string} title\n * @returns {jQuery|null}\n */\nconst newSection = (title) => {\n    const $tplsection = $('[data-tpl=\"section\"]');\n    if ($tplsection.length === 0) {\n        Log.debug('Template for section not found.');\n        return null;\n    }\n    let contentsection = $tplsection.html();\n    contentsection = contentsection.replace(/\\[title\\]/g, title);\n    const $newitem = $(contentsection);\n    $newitem.find('[data-action=\"deletesection\"]').on('click', event => {\n        deletesection(event);\n    });\n    return $newitem;\n};\n\n/**\n * Set the indentation of an item.\n *\n * @param {object} $item\n * @param {number} indentation\n */\nconst setIdentation = ($item, indentation) => {\n    $item.data('indentation', indentation);\n    $item.attr('data-indentation', indentation);\n\n    // Add +1 level of indentation (20px per level) including the initial padding.\n    $item.css('padding-left', (20 * (indentation + 1)) + 'px');\n};\n"],"names":["_interopRequireDefault","e","__esModule","default","_jquery","_sortable_list","_log","_modal_factory","_notification","strings","key","component","s","_exports","init","async","$editorContainer","$","length","changeTypeModal","forEach","one","Promise","resolve","getStrings","then","results","pos","fail","Log","debug","catch","$currentItem","SortableList","targetListSelector","moveHandlerSelector","isHorizontal","autoScroll","getElementType","element","Deferred","attr","on","event","preventDefault","selectedvalue","val","values","JSON","parse","title","$newitem","newSection","append","$inputs","find","last","focus","deletesection","$item","currentTarget","closest","show","$prevItem","prev","indentation","data","setIdentation","$nextItem","next","nextIndentation","menuitems","section","items","push","each","index","$element","sectiontitle","trim","item","pageid","contenttype","duration","Notification","alert","invalidindentationtitle","invalidindentation","text","Error","stringify","trigger","$iconModal","ModalFactory","create","type","types","CANCEL","body","html","changecontenttype","modal","getRoot","$selected","code","$iconspan","hide","error","$section","remove","$tplsection","contentsection","replace","css"],"mappings":"oOA2B6C,SAAAA,uBAAAC,GAAAA,OAAAA,GAAAA,EAAAC,WAAAD,EAAAE,CAAAA,QAAAF,EAAA;;;;;;;kFAL7CG,QAAAJ,uBAAAI,SACAC,eAAAL,uBAAAK,gBACAC,KAAAN,uBAAAM,MACAC,eAAAP,uBAAAO,gBAEAC,cAAAR,uBAAAQ,eAGA,IAAIC,QAAU,CACV,CAACC,IAAK,oBAAqBC,UAAW,oBACtC,CAACD,IAAK,qBAAsBC,UAAW,oBACvC,CAACD,IAAK,0BAA2BC,UAAW,qBAI5CC,EAAI,GAgRNC,SAAAC,KA7OkBC,UAChB,MACMC,kBAAmB,EAAAC,QAACd,SADH,sBAEvB,GAAgC,IAA5Ba,iBAAiBE,OACjB,OAKJ,IAAIC,sBAnCJV,QAAQW,QAAQC,MACZT,EAAES,IAAIX,KAAOW,IAAIX,MAGd,IAAIY,QAASC,WAChB,EAAAC,KAAAA,aAAWf,SAASgB,KAAK,SAASC,SAC9B,IAAIC,IAAM,EAOV,OANAlB,QAAQW,QAAQC,MACZT,EAAES,IAAIX,KAAOgB,QAAQC,KACrBA,QAGJJ,SAAQ,IACD,CACX,GAAGK,KAAK,SAAS3B,GAGb,OAFA4B,KAAAA,QAAIC,MAAM,yBACVD,KAAAA,QAAIC,MAAM7B,IACH,CACX,MAegB8B,MAAM,IAAM,MAGhC,IAAIC,aAAe,KAQN,IAAIC,eAAAA,QAjBM,qBAWV,CACTC,mBAAoB,KACpBC,oBAAqB,wBACrBC,cAAc,EACdC,YAAY,IAIXC,eAAiBC,SACXtB,QAACd,QAACqC,WAAWjB,QAAQgB,QAAQE,KAAK,eAG7C,EAAAxB,QAAAA,SAAE,yEAAyEyB,GAAG,QAASC,QACnFA,MAAMC,iBACN,MAAMC,eAAgB,EAAA5B,QAACd,SAAC,0CAA0C2C,MAC5DC,OAASC,KAAKC,MAAMJ,eAC1B,GAAIE,QAAUA,OAAO7B,OAAS,EAAG,CAC7B6B,OAAO3B,QAAQ8B,QACX,MAAMC,SAAWC,WAAWF,OACX,OAAbC,UAGJnC,iBAAiBqC,OAAOF,YAE5B,MAAMG,QAAUtC,iBAAiBuC,KAAK,sBAClCD,QAAQpC,QACRoC,QAAQE,OAAO,GAAGC,OAG1B,MACI5B,KAAAA,QAAIC,MAAM,mCAIlB,EAAAb,QAAAA,SAAE,iEAAiEyB,GAAG,QAASC,QAC3EA,MAAMC,iBAEN,MAAMO,SAAWC,WAAW,IACX,OAAbD,WAGJnC,iBAAiBqC,OAAOF,UACxBA,SAASI,KAAK,sBAAsB,GAAGE,YAG3C,EAAAxC,QAAAA,SAAE,oEAAoEyB,GAAG,QAASC,QAC9EA,MAAMC,iBACNc,cAAcf,SAIlB3B,iBAAiBuC,KAAK,cAAcb,GAAG,QAASC,QAC5CA,MAAMC,iBACN,MACMe,OADY,EAAA1C,QAAAA,SAAE0B,MAAMiB,eACFC,QAAQ,sBAC5BF,MAAMzC,SACNC,gBAAgB2C,OAChB9B,aAAe2B,SAKvB3C,iBAAiBuC,KAAK,6BAA6Bb,GAAG,QAASC,QAC3DA,MAAMC,iBACN,MAAMe,OAAQ,EAAA1C,QAAAA,SAAE0B,MAAMiB,eAAeC,QAAQ,sBAC7C,IAAKF,MAAMzC,OACP,OAEJ,MAAM6C,UAAYJ,MAAMK,KAAK,sBAC7B,IAAIC,YAAcN,MAAMO,KAAK,gBAAkB,EAE/C,GAAyB,IAArBH,UAAU7C,QAAkB6C,UAAUG,KAAK,eAAiBD,YAAe,EAC3E,OAEJA,aAAe,EACfE,cAAcR,MAAOM,aAGrB,IAAIG,UAAYT,MAAMU,KAAK,sBAC3B,KAAOD,WAAaA,UAAUlD,QAAQ,CAClC,MAAMoD,gBAAkBF,UAAUF,KAAK,gBAAkB,EACzD,GAAII,iBAAoBL,YAAc,EAClC,MAEAE,cAAcC,UAAWE,gBAAkB,GAC3CF,UAAYA,UAAUC,KAAK,qBAEnC,IAKJrD,iBAAiBuC,KAAK,4BAA4Bb,GAAG,QAASC,QAC1DA,MAAMC,iBACN,MAAMe,OAAQ,EAAA1C,QAAAA,SAAE0B,MAAMiB,eAAeC,QAAQ,sBAC7C,IAAKF,MAAMzC,OACP,OAEJ,IAAI+C,YAAcN,MAAMO,KAAK,gBAAkB,EAG/C,GAAmB,GAAfD,YACA,OAGJA,aAAe,EACfE,cAAcR,MAAOM,aAGrB,IAAIG,UAAYT,MAAMU,KAAK,sBAC3B,KAAOD,WAAaA,UAAUlD,QAAQ,CAClC,MAAMoD,gBAAkBF,UAAUF,KAAK,gBAAkB,EACzD,GAAII,iBAAoBL,YAAc,EAClC,MAEAE,cAAcC,UAAWE,gBAAkB,GAC3CF,UAAYA,UAAUC,KAAK,qBAEnC,KAIJ,EAAApD,QAAAA,SAAE,2DAA2DyB,GAAG,QAASC,QACrEA,MAAMC,iBAEN,IAAI2B,UAAY,GACZC,QAAU,CACVtB,MAAO,KACPuB,MAAO,IAEXF,UAAUG,KAAKF,SAEf,IAAIP,aAAe,EACnBjD,iBAAiBuC,KAAK,6CAA6CoB,KAAK,CAACC,MAAOrC,WAC5E,MAAMsC,UAAW,EAAA5D,QAACd,SAACoC,SAEnB,GAA8B,YAA1BsC,SAASX,KAAK,QAAuB,CACrC,MAAMY,aAAeD,SAAStB,KAAK,sBAAsBT,MACzD,IAAKgC,cAAwC,KAAxBA,aAAaC,OAC9B,OAUJ,OANAP,QAAU,CACNtB,MAAO4B,aACPL,MAAO,IAEXF,UAAUG,KAAKF,cACfP,aAAe,EAElB,CAAM,GAA8B,SAA1BY,SAASX,KAAK,QAAoB,CACzC,IAAIc,KAAO,CACPC,OAAUJ,SAASX,KAAK,UACxBgB,YAAeL,SAASX,KAAK,eAC7BiB,SAAYN,SAAStB,KAAK,kCAAkCT,MAC5DmB,YAAeY,SAASX,KAAK,gBAGjC,GAAKc,KAAKf,YAAcA,YAAe,EAMnC,MAJAmB,cAAYjF,QAACkF,MACTzE,EAAE0E,wBACF1E,EAAE2E,mBAAqB,KAAOV,SAAStB,KAAK,eAAeiC,OAAS,KAElE,IAAIC,MAAM,iCAAmCZ,SAAStB,KAAK,eAAeiC,QAKpF,OAHAvB,YAAce,KAAKf,iBAEnBO,QAAQC,MAAMC,KAAKM,KAEvB,KAGuB,EAAA/D,QAACd,SAAC,8BACV2C,IAAIE,KAAK0C,UAAUnB,aAGxB,EAAAtD,QAACd,SAAC,mCACVwF,QAAQ,YAKlB3E,iBAAiBuC,KAAK,sBAAsBoB,KAAK,CAACC,MAAOrC,WACrD,MAAMsC,UAAW,EAAA5D,QAACd,SAACoC,SACb0B,YAAcY,SAASX,KAAK,gBAAkB,EACpDC,cAAcU,SAAUZ,eAI5B,MAAM2B,YAAa,EAAA3E,QAACd,SAAC,iCACrB0F,eAAY1F,QAAC2F,OAAO,CAChBC,KAAMF,eAAAA,QAAaG,MAAMC,OACzBC,KAAMN,WAAWO,OACjBjD,MAAOtC,EAAEwF,oBAEZ3E,KAAK,SAAS4E,OAwBX,OAvBAlF,gBAAkBkF,MAElBA,MAAMC,UAAU/C,KAAK,uCAAuCb,GAAG,QAASC,QACpEA,MAAMC,iBACN,MAAM2D,WAAY,EAAAtF,QAAAA,SAAE0B,MAAMiB,eACpB4C,KAAOD,UAAUrC,KAAK,SAE5B,GAAIlC,cAAgBwE,KAAM,CAEtB,MAAMC,UAAYzE,aAAauB,KAAK,cAChCkD,UAAUvF,SACVuF,UAAUN,KAAKI,UAAUhD,KAAK,UAAU4C,QACxCM,UAAUhE,KAAK,QAAS8D,UAAUhD,KAAK,UAAUd,KAAK,UAAY,KAGtET,aAAaS,KAAK,mBAAoB+D,MACtCxE,aAAakC,KAAK,cAAesC,KACrC,CAEAxE,aAAe,KACfqE,MAAMK,SAGHL,KACX,GACCzE,KAAK,WACFC,KAAAA,QAAI8E,MAAM,2CACd,IAQJ,MAAMjD,cAAiBf,QACnBA,MAAMC,iBACN,MAAMgE,UAAW,EAAA3F,QAAAA,SAAE0B,MAAMiB,eAAeC,QAAQ,yBAC5C+C,SAAS1F,QACT0F,SAASC,UAUXzD,WAAcF,QAChB,MAAM4D,aAAc,EAAA7F,QAACd,SAAC,wBACtB,GAA2B,IAAvB2G,YAAY5F,OAEZ,OADAW,KAAAA,QAAIC,MAAM,mCACH,KAEX,IAAIiF,eAAiBD,YAAYX,OACjCY,eAAiBA,eAAeC,QAAQ,aAAc9D,OACtD,MAAMC,UAAW,EAAAlC,QAACd,SAAC4G,gBAInB,OAHA5D,SAASI,KAAK,iCAAiCb,GAAG,QAASC,QACvDe,cAAcf,SAEXQ,UASLgB,cAAgBA,CAACR,MAAOM,eAC1BN,MAAMO,KAAK,cAAeD,aAC1BN,MAAMlB,KAAK,mBAAoBwB,aAG/BN,MAAMsD,IAAI,eAAiB,IAAMhD,YAAc,GAAM,MACvD"}